{"$message_type":"diagnostic","message":"unused imports: `StoreMaxInt64` and `StoreSetString`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":124,"byte_end":137,"line_start":4,"line_end":4,"column_start":75,"column_end":88,"is_primary":true,"text":[{"text":"use substreams::store::{StoreAdd, StoreAddInt64, StoreGet, StoreGetInt64, StoreMaxInt64, StoreSetString};","highlight_start":75,"highlight_end":88}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":139,"byte_end":153,"line_start":4,"line_end":4,"column_start":90,"column_end":104,"is_primary":true,"text":[{"text":"use substreams::store::{StoreAdd, StoreAddInt64, StoreGet, StoreGetInt64, StoreMaxInt64, StoreSetString};","highlight_start":90,"highlight_end":104}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":122,"byte_end":153,"line_start":4,"line_end":4,"column_start":73,"column_end":104,"is_primary":true,"text":[{"text":"use substreams::store::{StoreAdd, StoreAddInt64, StoreGet, StoreGetInt64, StoreMaxInt64, StoreSetString};","highlight_start":73,"highlight_end":104}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `StoreMaxInt64` and `StoreSetString`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:4:75\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse substreams::store::{StoreAdd, StoreAddInt64, StoreGet, StoreGetInt64, StoreMaxInt64, StoreSetString};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `poolStats_ptr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":6664,"byte_end":6673,"line_start":181,"line_end":181,"column_start":18,"column_end":27,"is_primary":true,"text":[{"text":"pub fn graph_out(poolStats: PoolMetrics, events:TornadoEvents) -> Result<EntityChanges, substreams::errors::Error> {","highlight_start":18,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_snake_case)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":6664,"byte_end":6673,"line_start":181,"line_end":181,"column_start":18,"column_end":27,"is_primary":true,"text":[{"text":"pub fn graph_out(poolStats: PoolMetrics, events:TornadoEvents) -> Result<EntityChanges, substreams::errors::Error> {","highlight_start":18,"highlight_end":27}],"label":null,"suggested_replacement":"pool_stats_ptr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `poolStats_ptr` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:181:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn graph_out(poolStats: PoolMetrics, events:TornadoEvents) -> Result<EntityChanges, substreams::\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `pool_stats_ptr`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_snake_case)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `poolStats_len` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":6664,"byte_end":6673,"line_start":181,"line_end":181,"column_start":18,"column_end":27,"is_primary":true,"text":[{"text":"pub fn graph_out(poolStats: PoolMetrics, events:TornadoEvents) -> Result<EntityChanges, substreams::errors::Error> {","highlight_start":18,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":6664,"byte_end":6673,"line_start":181,"line_end":181,"column_start":18,"column_end":27,"is_primary":true,"text":[{"text":"pub fn graph_out(poolStats: PoolMetrics, events:TornadoEvents) -> Result<EntityChanges, substreams::errors::Error> {","highlight_start":18,"highlight_end":27}],"label":null,"suggested_replacement":"pool_stats_len","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `poolStats_len` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:181:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn graph_out(poolStats: PoolMetrics, events:TornadoEvents) -> Result<EntityChanges, substreams::\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `pool_stats_len`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `poolStats` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":6664,"byte_end":6673,"line_start":181,"line_end":181,"column_start":18,"column_end":27,"is_primary":true,"text":[{"text":"pub fn graph_out(poolStats: PoolMetrics, events:TornadoEvents) -> Result<EntityChanges, substreams::errors::Error> {","highlight_start":18,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":6664,"byte_end":6673,"line_start":181,"line_end":181,"column_start":18,"column_end":27,"is_primary":true,"text":[{"text":"pub fn graph_out(poolStats: PoolMetrics, events:TornadoEvents) -> Result<EntityChanges, substreams::errors::Error> {","highlight_start":18,"highlight_end":27}],"label":null,"suggested_replacement":"pool_stats","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `poolStats` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:181:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn graph_out(poolStats: PoolMetrics, events:TornadoEvents) -> Result<EntityChanges, substreams::\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `pool_stats`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"4 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 4 warnings emitted\u001b[0m\n\n"}
