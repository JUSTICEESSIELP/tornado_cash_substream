// @generated
// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct TornadoEvents {
    #[prost(message, repeated, tag="1")]
    pub deposits: ::prost::alloc::vec::Vec<Deposit>,
    #[prost(message, repeated, tag="2")]
    pub withdrawals: ::prost::alloc::vec::Vec<Withdrawal>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Deposit {
    /// Changed to string for hex encoding
    #[prost(string, tag="1")]
    pub commitment: ::prost::alloc::string::String,
    #[prost(uint64, tag="2")]
    pub block_number: u64,
    /// Use int64 for timestamp seconds
    #[prost(message, optional, tag="3")]
    pub block_time: ::core::option::Option<::prost_types::Timestamp>,
    #[prost(uint32, tag="4")]
    pub log_index: u32,
    #[prost(string, tag="5")]
    pub eth_amount: ::prost::alloc::string::String,
    #[prost(string, tag="6")]
    pub from: ::prost::alloc::string::String,
    #[prost(bytes="vec", tag="7")]
    pub txn_hash: ::prost::alloc::vec::Vec<u8>,
    #[prost(string, tag="8")]
    pub usdc_amount: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Withdrawal {
    /// Changed to string for hex encoding
    #[prost(string, tag="1")]
    pub nullifier_hash: ::prost::alloc::string::String,
    /// Changed to string for hex encoding
    #[prost(string, tag="2")]
    pub to: ::prost::alloc::string::String,
    /// Changed to string for hex encoding
    #[prost(bytes="vec", tag="3")]
    pub relayer: ::prost::alloc::vec::Vec<u8>,
    #[prost(string, tag="4")]
    pub fee: ::prost::alloc::string::String,
    #[prost(uint64, tag="5")]
    pub block_number: u64,
    /// Use int64 for timestamp seconds
    #[prost(message, optional, tag="6")]
    pub block_time: ::core::option::Option<::prost_types::Timestamp>,
    #[prost(uint32, tag="7")]
    pub log_index: u32,
    #[prost(string, tag="8")]
    pub eth_amount: ::prost::alloc::string::String,
    #[prost(string, tag="9")]
    pub usdc_amount: ::prost::alloc::string::String,
    #[prost(bytes="vec", tag="10")]
    pub txn_hash: ::prost::alloc::vec::Vec<u8>,
}
// @@protoc_insertion_point(module)
