// @generated
// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct DepositMetrics {
    #[prost(uint64, tag="1")]
    pub total_deposits: u64,
    #[prost(uint64, tag="2")]
    pub total_withdrawals: u64,
    #[prost(uint64, tag="3")]
    pub total_fees: u64,
    #[prost(message, repeated, tag="4")]
    pub relayer_metrics: ::prost::alloc::vec::Vec<RelayerMetrics>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct RelayerMetrics {
    #[prost(string, tag="1")]
    pub address: ::prost::alloc::string::String,
    #[prost(uint64, tag="2")]
    pub total_withdrawals: u64,
    #[prost(uint64, tag="3")]
    pub total_fees: u64,
    #[prost(uint64, tag="4")]
    pub max_fee: u64,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Deposit {
    #[prost(bytes="vec", tag="1")]
    pub commitment: ::prost::alloc::vec::Vec<u8>,
    #[prost(uint64, tag="2")]
    pub leaf_index: u64,
    #[prost(uint64, tag="3")]
    pub timestamp: u64,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Withdrawal {
    #[prost(bytes="vec", tag="1")]
    pub to: ::prost::alloc::vec::Vec<u8>,
    #[prost(bytes="vec", tag="2")]
    pub nullifier_hash: ::prost::alloc::vec::Vec<u8>,
    #[prost(bytes="vec", tag="3")]
    pub relayer: ::prost::alloc::vec::Vec<u8>,
    #[prost(uint64, tag="4")]
    pub fee: u64,
}
/// Store model messages for different metric types
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct TimeBasedMetrics {
    #[prost(uint64, tag="1")]
    pub hour: u64,
    #[prost(uint64, tag="2")]
    pub day: u64,
    #[prost(uint64, tag="3")]
    pub deposit_count: u64,
    #[prost(uint64, tag="4")]
    pub withdrawal_count: u64,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct UniqueIdentifiers {
    #[prost(bytes="vec", repeated, tag="1")]
    pub commitments: ::prost::alloc::vec::Vec<::prost::alloc::vec::Vec<u8>>,
    #[prost(bytes="vec", repeated, tag="2")]
    pub nullifier_hashes: ::prost::alloc::vec::Vec<::prost::alloc::vec::Vec<u8>>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct RelayerActivity {
    #[prost(bytes="vec", tag="1")]
    pub relayer_address: ::prost::alloc::vec::Vec<u8>,
    #[prost(uint64, tag="2")]
    pub withdrawal_count: u64,
    #[prost(uint64, tag="3")]
    pub total_fees: u64,
    #[prost(bytes="vec", repeated, tag="4")]
    pub recipient_addresses: ::prost::alloc::vec::Vec<::prost::alloc::vec::Vec<u8>>,
}
// @@protoc_insertion_point(module)
